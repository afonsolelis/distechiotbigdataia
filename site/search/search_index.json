{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Comunidade Estudos Dev","text":"<p>\ud83d\udcbb Discord</p> <p>Neste servidor voc\u00eas podem estudar, ver vagas de emprego e tirar d\u00favidas com o professor.</p>"},{"location":"#sala-lab7-principal","title":"Sala: \ud83d\udd79\ufe0f Lab7 Principal","text":""},{"location":"#programacao-de-aulas","title":"Programa\u00e7\u00e3o de Aulas","text":"Data Aula 05/08 Fundamentos e Ferramentas de Big Data 12/08 Processamento de Dados com Apache Spark 19/08 Utiliza\u00e7\u00e3o do ClickHouse para Big Data 26/08 Projetos Pr\u00e1ticos de Big Data 02/09 Fundamentos de IA e Machine Learning 09/09 Redes Neurais e Deep Learning 16/09 Projetos Pr\u00e1ticos de IA 23/09 Projetos Pr\u00e1ticos de IA 30/09 Feriado 07/10 Introdu\u00e7\u00e3o ao IoT 14/10 Avalia\u00e7\u00e3o Multidisciplinar - 2,5 pontos 21/10 Comunica\u00e7\u00e3o e Protocolos IoT 28/10 Projetos IoT Pr\u00e1ticos 04/11 Integra\u00e7\u00e3o de IoT, Big Data e IA 11/11 Integra\u00e7\u00e3o de IoT, Big Data e IA 18/11 Revis\u00e3o e direcionamento de projetos 25/11 Avalia\u00e7\u00e3o Semestral - Prova (2 pontos) + Projeto (4 pontos)"},{"location":"#avaliacao","title":"Avalia\u00e7\u00e3o","text":"Pontua\u00e7\u00e3o Avalia\u00e7\u00e3o Check? 0,5 Cria\u00e7\u00e3o do Github do Projeto individual \u274c 2,5 Avalia\u00e7\u00e3o Multidisciplinar (Checkpoint de Projeto) \u274c 1,0 Avalia\u00e7\u00e3o Continuada \u274c 4,0 Pipeline de Dados com IA \u274c 2,0 Prova Te\u00f3rica \u274c <p>\u2714\ufe0f\u274c</p> <p></p>"},{"location":"calendario/","title":"Calend\u00e1rio","text":""},{"location":"fundbd/","title":"Fundbd","text":"<p>Oi</p>"},{"location":"fundbig/","title":"Fundamentos e Ferramentas de Big Data","text":""},{"location":"fundbig/#revisao-de-banco-de-dados-rapida","title":"Revis\u00e3o de Banco de Dados R\u00e1pida!","text":""},{"location":"fundbig/#1-introducao-e-objetivos","title":"1. Introdu\u00e7\u00e3o e Objetivos","text":"<p>A import\u00e2ncia da integridade e confiabilidade dos dados \u00e9 reconhecida firmemente pela ind\u00fastria da tecnologia da informa\u00e7\u00e3o. Os conceitos ACID s\u00e3o fundamentais para garantir que os sistemas de banco de dados mantenham a consist\u00eancia dos dados em meio a opera\u00e7\u00f5es complexas e concorrentes. Al\u00e9m disso, a escolha da ferramenta de banco de dados adequada pode influenciar significativamente o desempenho e a escalabilidade das aplica\u00e7\u00f5es.</p>"},{"location":"fundbig/#2-conceitos-acid","title":"2. Conceitos ACID","text":"<p>Os conceitos ACID s\u00e3o fundamentais para garantir a confiabilidade e a integridade dos dados em um sistema de banco de dados. ACID \u00e9 um acr\u00f4nimo que representa:</p> <ol> <li> <p>Atomicidade (Atomicity): Refere-se \u00e0 propriedade de que uma transa\u00e7\u00e3o deve ser tratada como uma unidade indivis\u00edvel. Ou seja, todas as opera\u00e7\u00f5es dentro de uma transa\u00e7\u00e3o devem ser conclu\u00eddas com sucesso; caso contr\u00e1rio, a transa\u00e7\u00e3o \u00e9 revertida. Isso garante que o banco de dados n\u00e3o fique em um estado inconsistente.</p> </li> <li> <p>Consist\u00eancia (Consistency): Garante que uma transa\u00e7\u00e3o leva o banco de dados de um estado v\u00e1lido para outro estado v\u00e1lido. Qualquer dado escrito no banco de dados deve ser v\u00e1lido de acordo com todas as regras definidas, incluindo restri\u00e7\u00f5es, gatilhos, cascatas, etc.</p> </li> <li> <p>Isolamento (Isolation): Garante que as opera\u00e7\u00f5es de transa\u00e7\u00f5es concorrentes n\u00e3o interfiram umas nas outras. O n\u00edvel de isolamento determina como e quando as mudan\u00e7as feitas em uma transa\u00e7\u00e3o se tornam vis\u00edveis para outras transa\u00e7\u00f5es.</p> </li> <li> <p>Durabilidade (Durability): Garante que, uma vez que uma transa\u00e7\u00e3o foi confirmada, ela permanecer\u00e1 assim mesmo em caso de falha do sistema. Isso \u00e9 alcan\u00e7ado atrav\u00e9s do uso de logs de transa\u00e7\u00e3o e backups.</p> </li> </ol>"},{"location":"fundbig/#3-principais-ferramentas-de-banco-de-dados","title":"3. Principais Ferramentas de Banco de Dados","text":""},{"location":"fundbig/#31-postgresql","title":"3.1 PostgreSQL","text":"<p>O PostgreSQL \u00e9 um dos sistemas de gerenciamento de banco de dados relacionais mais avan\u00e7ados e populares dispon\u00edveis hoje. Ele \u00e9 conhecido por sua robustez, flexibilidade e conformidade com os padr\u00f5es SQL. Algumas caracter\u00edsticas incluem:</p> <ul> <li>Suporte ACID completo</li> <li>Suporte a JSON e JSONB para dados n\u00e3o estruturados</li> <li>Extensibilidade com fun\u00e7\u00f5es, operadores e tipos de dados personalizados</li> <li>Comunidade ativa e grande quantidade de recursos e documenta\u00e7\u00e3o</li> </ul>"},{"location":"fundbig/#32-mysql","title":"3.2 MySQL","text":"<p>O MySQL \u00e9 outro sistema de gerenciamento de banco de dados relacional muito popular, especialmente no desenvolvimento web. Ele \u00e9 conhecido por sua velocidade e facilidade de uso. Algumas caracter\u00edsticas incluem:</p> <ul> <li>Suporte ACID com o mecanismo de armazenamento InnoDB</li> <li>Ampla ado\u00e7\u00e3o e suporte pela comunidade</li> <li>Compatibilidade com diversas linguagens de programa\u00e7\u00e3o</li> </ul>"},{"location":"fundbig/#4-comparacao-com-hadoop","title":"4. Compara\u00e7\u00e3o com Hadoop","text":"<p>O Hadoop \u00e9 uma plataforma de software de c\u00f3digo aberto usada para computa\u00e7\u00e3o distribu\u00edda e armazenamento de grandes volumes de dados. Ele \u00e9 composto por v\u00e1rios m\u00f3dulos, incluindo o Hadoop Distributed File System (HDFS) e o MapReduce. Comparado com bancos de dados relacionais como PostgreSQL e MySQL:</p> <ul> <li>Hadoop \u00e9 ideal para processamento de grandes volumes de dados n\u00e3o estruturados e semi-estruturados.</li> <li>Bancos de dados relacionais s\u00e3o ideais para transa\u00e7\u00f5es ACID e consultas complexas em dados estruturados.</li> </ul>"},{"location":"fundbig/#5-comparacao-com-clickhouse","title":"5. Compara\u00e7\u00e3o com ClickHouse","text":"<p>O ClickHouse \u00e9 um sistema de gerenciamento de banco de dados de coluna projetado para consultas anal\u00edticas em tempo real. Comparado com bancos de dados relacionais tradicionais:</p> <ul> <li>ClickHouse \u00e9 otimizado para leitura e consultas anal\u00edticas, com alta performance em consultas complexas em grandes volumes de dados.</li> <li>Bancos de dados relacionais s\u00e3o mais adequados para opera\u00e7\u00f5es transacionais e consultas que exigem conformidade ACID.</li> </ul>"},{"location":"fundbig/#51-clickhouse-e-mergetree","title":"5.1 ClickHouse e MergeTree","text":"<p>O ClickHouse utiliza uma estrutura de dados chamada MergeTree para armazenar dados de forma eficiente. O MergeTree permite:</p> <ul> <li>Particionamento: Divis\u00e3o dos dados em segmentos menores para facilitar a consulta.</li> <li>Indexa\u00e7\u00e3o: Cria\u00e7\u00e3o de \u00edndices para acelerar as consultas.</li> <li>Merge: Combina\u00e7\u00e3o de partes menores dos dados em partes maiores para otimizar o armazenamento e a performance.</li> </ul>"},{"location":"fundbig/#adendo-o-que-e-olap","title":"Adendo: O que \u00e9 OLAP?","text":"<p>OLAP (Online Analytical Processing) \u00e9 uma tecnologia que permite a an\u00e1lise r\u00e1pida de grandes volumes de dados armazenados em um banco de dados multidimensional. OLAP \u00e9 amplamente utilizado em aplica\u00e7\u00f5es de Business Intelligence (BI) para realizar consultas complexas e an\u00e1lises de dados.</p>"},{"location":"fundbig/#caracteristicas-do-olap","title":"Caracter\u00edsticas do OLAP","text":"<ul> <li>Multidimensionalidade: OLAP permite organizar dados em m\u00faltiplas dimens\u00f5es, facilitando a visualiza\u00e7\u00e3o e an\u00e1lise de informa\u00e7\u00f5es de diferentes perspectivas.</li> <li>Velocidade: OLAP \u00e9 otimizado para consultas r\u00e1pidas e an\u00e1lises interativas, permitindo que os usu\u00e1rios obtenham insights em tempo real.</li> <li>Agrega\u00e7\u00e3o: OLAP suporta a agrega\u00e7\u00e3o de dados, permitindo c\u00e1lculos como somas, m\u00e9dias e contagens em diferentes n\u00edveis de granularidade.</li> <li>Hierarquias: OLAP permite a defini\u00e7\u00e3o de hierarquias dentro das dimens\u00f5es, facilitando a navega\u00e7\u00e3o e an\u00e1lise de dados em diferentes n\u00edveis de detalhe.</li> </ul>"},{"location":"fundbig/#tipos-de-olap","title":"Tipos de OLAP","text":"<ol> <li>ROLAP (Relational OLAP): Utiliza bancos de dados relacionais para armazenar e gerenciar dados. As consultas OLAP s\u00e3o traduzidas em consultas SQL complexas.</li> <li>MOLAP (Multidimensional OLAP): Utiliza bancos de dados multidimensionais (cubos OLAP) para armazenar dados. Oferece desempenho superior para consultas complexas.</li> <li>HOLAP (Hybrid OLAP): Combina as abordagens ROLAP e MOLAP, aproveitando os pontos fortes de ambos os tipos.</li> </ol>"},{"location":"fundbig/#aplicacoes-de-olap","title":"Aplica\u00e7\u00f5es de OLAP","text":"<p>OLAP \u00e9 amplamente utilizado em v\u00e1rias \u00e1reas, incluindo:</p> <ul> <li>An\u00e1lise de Vendas: Para analisar tend\u00eancias de vendas, desempenho de produtos e comportamento de clientes.</li> <li>Finan\u00e7as: Para an\u00e1lise de lucros, despesas e previs\u00f5es financeiras.</li> <li>Marketing: Para avaliar a efic\u00e1cia das campanhas de marketing e segmentar mercados.</li> <li>Opera\u00e7\u00f5es: Para monitorar e otimizar processos operacionais e log\u00edsticos.</li> </ul> <p>OLAP \u00e9 uma ferramenta poderosa para transformar dados brutos em insights acion\u00e1veis, permitindo que as organiza\u00e7\u00f5es tomem decis\u00f5es informadas e baseadas em dados.</p>"},{"location":"fundbig/#ferramentas-que-iremos-utilizar-para-a-nossa-aplicacao","title":"Ferramentas que Iremos Utilizar Para a Nossa Aplica\u00e7\u00e3o","text":""},{"location":"fundbig/#introducao-ao-tkinter","title":"Introdu\u00e7\u00e3o ao Tkinter","text":""},{"location":"fundbig/#conceitos-basicos","title":"Conceitos B\u00e1sicos","text":"<p>Tkinter \u00e9 a biblioteca padr\u00e3o do Python para a cria\u00e7\u00e3o de interfaces gr\u00e1ficas (GUIs). \u00c9 uma das op\u00e7\u00f5es mais populares devido \u00e0 sua simplicidade e integra\u00e7\u00e3o direta com o Python.</p>"},{"location":"fundbig/#principais-caracteristicas","title":"Principais Caracter\u00edsticas","text":"<ul> <li>Simplicidade: F\u00e1cil de aprender e usar.</li> <li>Integra\u00e7\u00e3o: Faz parte da biblioteca padr\u00e3o do Python.</li> <li>Componentes: Oferece uma variedade de widgets (bot\u00f5es, labels, entradas de texto, etc.).</li> <li>Compatibilidade: Funciona em v\u00e1rias plataformas (Windows, macOS, Linux).</li> </ul>"},{"location":"fundbig/#widgets-comuns","title":"Widgets Comuns","text":"<ul> <li>Label: Exibe texto ou imagens.</li> <li>Button: Bot\u00e3o que pode executar uma a\u00e7\u00e3o quando clicado.</li> <li>Entry: Campo para entrada de texto.</li> <li>Text: Campo de texto multi-linhas.</li> <li>Frame: Cont\u00eainer para organizar outros widgets.</li> <li>Canvas: \u00c1rea para desenhar formas, gr\u00e1ficos e imagens.</li> <li>Menu: Barras de menu e menus pop-up.</li> </ul>"},{"location":"fundbig/#exemplos-de-uso-do-pack","title":"Exemplos de Uso do <code>pack()</code>","text":""},{"location":"fundbig/#metodo-pack","title":"M\u00e9todo <code>pack()</code>","text":"<p>O m\u00e9todo <code>pack()</code> \u00e9 um dos tr\u00eas gerenciadores de layout (tamb\u00e9m conhecidos como geometry managers) oferecidos pelo Tkinter, sendo os outros dois <code>grid()</code> e <code>place()</code>. O <code>pack()</code> organiza widgets dentro de um cont\u00eainer (como uma janela ou um frame) de forma sequencial, uma ap\u00f3s a outra, com base na ordem de inclus\u00e3o.</p>"},{"location":"fundbig/#caracteristicas-do-pack","title":"Caracter\u00edsticas do <code>pack()</code>","text":"<ul> <li>Simplicidade: \u00c9 o m\u00e9todo mais simples e r\u00e1pido de usar.</li> <li>Organiza\u00e7\u00e3o: Organiza widgets em blocos, que podem ser empilhados vertical ou horizontalmente.</li> <li>Personaliza\u00e7\u00e3o: Permite ajustes de preenchimento, margens e alinhamento.</li> </ul>"},{"location":"fundbig/#parametros-principais","title":"Par\u00e2metros Principais","text":"<ul> <li>side: Especifica o lado do cont\u00eainer onde o widget ser\u00e1 ancorado. Valores poss\u00edveis: <code>TOP</code> (padr\u00e3o), <code>BOTTOM</code>, <code>LEFT</code>, <code>RIGHT</code>.</li> </ul> <p><code>python   widget.pack(side=tk.LEFT)</code></p> <ul> <li>fill: Define se e como o widget deve preencher o espa\u00e7o dispon\u00edvel. Valores poss\u00edveis: <code>NONE</code> (padr\u00e3o), <code>X</code>, <code>Y</code>, <code>BOTH</code>.</li> </ul> <p><code>python   widget.pack(fill=tk.BOTH)</code></p> <ul> <li>expand: Se verdadeiro (<code>True</code>), permite que o widget se expanda para usar o espa\u00e7o n\u00e3o utilizado no cont\u00eainer.</li> </ul> <p><code>python   widget.pack(expand=True)</code></p> <ul> <li>padx e pady: Adiciona espa\u00e7o (padding) ao redor do widget, na dire\u00e7\u00e3o horizontal (<code>padx</code>) e vertical (<code>pady</code>).</li> </ul> <p><code>python   widget.pack(padx=10, pady=5)</code></p> <ul> <li>anchor: Especifica onde o widget ser\u00e1 ancorado dentro do espa\u00e7o alocado. Valores poss\u00edveis: <code>N</code>, <code>S</code>, <code>E</code>, <code>W</code>, <code>NE</code>, <code>NW</code>, <code>SE</code>, <code>SW</code>, <code>CENTER</code> (padr\u00e3o).</li> </ul> <p><code>python   widget.pack(anchor=tk.CENTER)</code></p>"},{"location":"fundbig/#gerenciamento-de-layout","title":"Gerenciamento de Layout","text":"<ul> <li>Pack: Organiza widgets em blocos antes ou depois uns dos outros.</li> <li>Grid: Organiza widgets em uma grade.</li> <li>Place: Organiza widgets em posi\u00e7\u00f5es absolutas.</li> </ul>"},{"location":"fundbig/#eventos","title":"Eventos","text":"<p>Eventos s\u00e3o a\u00e7\u00f5es ou ocorr\u00eancias detectadas por um programa. Eventos podem ser acionados por intera\u00e7\u00f5es do usu\u00e1rio (como cliques de mouse, pressionamentos de teclas), mudan\u00e7as de estado do sistema, ou outras atividades que o programa est\u00e1 monitorando. Em Python, especialmente em interfaces gr\u00e1ficas (GUIs), eventos s\u00e3o frequentemente utilizados para permitir a intera\u00e7\u00e3o do usu\u00e1rio com a aplica\u00e7\u00e3o.</p>"},{"location":"fundbig/#sistema-de-eventos","title":"Sistema de Eventos","text":"<ul> <li>Emissor de Eventos: O componente que gera um evento.</li> <li>Ouvinte de Eventos (Event Listener): O componente que aguarda a ocorr\u00eancia de um evento espec\u00edfico.</li> <li>Manipulador de Eventos (Event Handler): A fun\u00e7\u00e3o ou m\u00e9todo que \u00e9 chamado em resposta a um evento.</li> </ul>"},{"location":"fundbig/#eventos-comuns","title":"Eventos Comuns","text":"<ul> <li><code>&lt;Button-1&gt;</code>: Clique do bot\u00e3o esquerdo do mouse.</li> <li><code>&lt;Button-3&gt;</code>: Clique do bot\u00e3o direito do mouse.</li> <li><code>&lt;Key&gt;</code>: Qualquer tecla pressionada.</li> <li><code>&lt;Return&gt;</code>: A tecla Enter/Return pressionada.</li> <li><code>&lt;Motion&gt;</code>: Movimento do mouse.</li> </ul>"},{"location":"fundbig/#caracteristicas-do-mainloop","title":"Caracter\u00edsticas do <code>mainloop()</code>","text":"<ul> <li>Responsividade: Mant\u00e9m a interface gr\u00e1fica ativa e pronta para responder a eventos.</li> <li>Bloqueante: O m\u00e9todo <code>mainloop()</code> \u00e9 bloqueante, ou seja, o c\u00f3digo ap\u00f3s a chamada deste m\u00e9todo n\u00e3o ser\u00e1 executado at\u00e9 que a janela seja fechada.</li> <li>Eventos: Gere eventos como cliques, teclas pressionadas, movimenta\u00e7\u00e3o do mouse, etc., permitindo que a interface gr\u00e1fica interaja com o usu\u00e1rio.</li> </ul>"},{"location":"fundbig/#comportamento-do-mainloop","title":"Comportamento do <code>mainloop()</code>","text":"<ul> <li>Inicializa\u00e7\u00e3o: Quando <code>mainloop()</code> \u00e9 chamado, ele inicializa o loop de eventos do Tkinter.</li> <li>Eventos: O loop de eventos aguarda e despacha eventos, como cliques de mouse e teclas pressionadas.</li> <li>Interrup\u00e7\u00e3o: O loop \u00e9 interrompido quando a janela principal \u00e9 fechada pelo usu\u00e1rio.</li> </ul>"},{"location":"fundbig/#exemplos-praticos","title":"Exemplos Pr\u00e1ticos","text":""},{"location":"fundbig/#criando-uma-janela-simples","title":"Criando uma Janela Simples","text":"<pre><code>import tkinter as tk\n\n# Cria\u00e7\u00e3o da janela principal\nroot = tk.Tk()\nroot.title(\"Minha Primeira Janela\")\n\n# R\u00f3tulo\nlabel = tk.Label(root, text=\"Ol\u00e1, Tkinter!\")\nlabel.pack()\n\n# Bot\u00e3o\nbutton = tk.Button(root, text=\"Clique Aqui\")\nbutton.pack()\n\n# Iniciando o mainloop\nroot.mainloop()\n</code></pre>"},{"location":"fundbig/#entrada-de-texto-e-botao","title":"Entrada de Texto e Bot\u00e3o","text":"<pre><code>import tkinter as tk\n\n# Fun\u00e7\u00e3o para exibir o texto da entrada\ndef mostrar_texto():\n    texto = entrada.get()\n    label['text'] = texto\n\n# Cria\u00e7\u00e3o da janela principal\nroot = tk.Tk()\nroot.title(\"Entrada de Texto\")\n\n# Entrada de Texto\nentrada = tk.Entry(root)\nentrada.pack()\n\n# Bot\u00e3o\nbutton = tk.Button(root, text=\"Mostrar Texto\", command=mostrar_texto)\nbutton.pack()\n\n# R\u00f3tulo\nlabel = tk.Label(root, text=\"\")\nlabel.pack()\n\n# Iniciando o mainloop\nroot.mainloop()\n</code></pre>"},{"location":"fundbig/#area-de-desenho-canvas","title":"\u00c1rea de Desenho (Canvas)","text":"<pre><code>import tkinter as tk\n\n# Cria\u00e7\u00e3o da janela principal\nroot = tk.Tk()\nroot.title(\"Canvas\")\n\n# Canvas\ncanvas = tk.Canvas(root, width=400, height=300)\ncanvas.pack()\n\n# Desenhando um ret\u00e2ngulo\ncanvas.create_rectangle(50, 50, 200, 150, fill=\"blue\")\n\n# Iniciando o mainloop\nroot.mainloop()\n</code></pre>"},{"location":"fundbig/#introducao-ao-pyinstaller","title":"Introdu\u00e7\u00e3o ao PyInstaller","text":""},{"location":"fundbig/#o-que-e-pyinstaller","title":"O que \u00e9 PyInstaller?","text":"<p>PyInstaller \u00e9 uma ferramenta poderosa que converte scripts Python em execut\u00e1veis aut\u00f4nomos (Windows, macOS e Linux). Com PyInstaller, voc\u00ea pode distribuir suas aplica\u00e7\u00f5es Python sem precisar instalar o interpretador Python nas m\u00e1quinas dos usu\u00e1rios.</p>"},{"location":"fundbig/#funcionalidades-principais","title":"Funcionalidades Principais","text":"<ul> <li>Cria\u00e7\u00e3o de Execut\u00e1veis: Converte scripts Python em arquivos execut\u00e1veis.</li> <li>Aut\u00f4nomos: Inclui o interpretador Python e todas as depend\u00eancias necess\u00e1rias.</li> <li>Multiplataforma: Suporte para Windows, macOS e Linux.</li> <li>M\u00faltiplos Arquivos de Entrada: Suporte para aplicativos que consistem em v\u00e1rios m\u00f3dulos e pacotes.</li> </ul>"},{"location":"fundbig/#instalacao-do-pyinstaller","title":"Instala\u00e7\u00e3o do PyInstaller","text":"<p>PyInstaller pode ser instalado via <code>pip</code>:</p> <pre><code>pip install pyinstaller\n</code></pre>"},{"location":"fundbig/#uso-basico-do-pyinstaller","title":"Uso B\u00e1sico do PyInstaller","text":"<p>Para criar um execut\u00e1vel de um script Python, basta usar o comando:</p> <pre><code>pyinstaller your-script.py\n</code></pre> <p>Por padr\u00e3o, este comando cria um diret\u00f3rio <code>dist</code> contendo o execut\u00e1vel e todas as bibliotecas necess\u00e1rias.</p>"},{"location":"fundbig/#exemplos-de-uso","title":"Exemplos de Uso","text":"<ul> <li>Criar um Execut\u00e1vel Simples:</li> </ul> <p><code>sh   pyinstaller hello.py</code></p> <ul> <li>Criar um Execut\u00e1vel \u00danico (um \u00fanico arquivo):</li> </ul> <p><code>sh   pyinstaller --onefile hello.py</code></p> <ul> <li>Criar um Execut\u00e1vel sem Console e com um \u00cdcone Personalizado:</li> </ul> <p><code>sh   pyinstaller --onefile --noconsole --icon=icon.ico hello.py</code></p> <ul> <li>Incluir Arquivos de Dados Externos:</li> </ul> <p>Quando sua aplica\u00e7\u00e3o depende de arquivos de dados externos, como arquivos de configura\u00e7\u00e3o, imagens, ou qualquer outro tipo de recurso, voc\u00ea pode inclu\u00ed-los no execut\u00e1vel usando a op\u00e7\u00e3o <code>--add-data</code>.</p> <p><code>sh   pyinstaller --onefile --add-data 'source_path:destination_path' your-script.py</code></p>"},{"location":"fundbig/#opcoes-comuns","title":"Op\u00e7\u00f5es Comuns","text":"<ul> <li>--onefile: Cria um \u00fanico arquivo execut\u00e1vel.</li> <li>--noconsole: (ou <code>--windowed</code> em Windows/macOS) Executa a aplica\u00e7\u00e3o sem abrir uma janela de terminal/console.</li> <li>--name: Define o nome do execut\u00e1vel.</li> <li>--icon: Especifica um \u00edcone para o execut\u00e1vel.</li> </ul>"},{"location":"fundbig/#importacoes-dinamicas","title":"Importa\u00e7\u00f5es Din\u00e2micas","text":"<p>Algumas bibliotecas podem utilizar importa\u00e7\u00f5es din\u00e2micas que n\u00e3o s\u00e3o detectadas automaticamente pelo PyInstaller. Nesses casos, voc\u00ea pode especificar essas importa\u00e7\u00f5es manualmente com a op\u00e7\u00e3o <code>--hidden-import</code>.</p> <pre><code>pyinstaller --onefile --hidden-import 'module_name' your-script.py\n</code></pre>"},{"location":"fundbig/#autoestudos","title":"Autoestudos","text":"BigData sem Mist\u00e9rio Fundamentos e Aplica\u00e7\u00e3o de BigData em Empresas"},{"location":"fundbig/#pratica","title":"Pr\u00e1tica","text":""},{"location":"fundbig/#passo-a-passo-criacao-de-uma-aplicacao-simples-com-tkinter-e-pyinstaller","title":"Passo a Passo: Cria\u00e7\u00e3o de uma Aplica\u00e7\u00e3o Simples com Tkinter e PyInstaller","text":""},{"location":"fundbig/#1-instalacao-do-python","title":"1. Instala\u00e7\u00e3o do Python","text":"<p>Certifique-se de ter o Python instalado em sua m\u00e1quina. Voc\u00ea pode baix\u00e1-lo do site oficial python.org.</p>"},{"location":"fundbig/#2-criando-o-script-tkinter","title":"2. Criando o Script Tkinter","text":"<p>Crie um arquivo Python chamado <code>app.py</code> e adicione o seguinte c\u00f3digo:</p> <pre><code>import tkinter as tk\n\ndef mostrar_texto():\n    texto = entrada.get()\n    label.config(text=texto)\n\n# Cria\u00e7\u00e3o da janela principal\nroot = tk.Tk()\nroot.title(\"Minha Aplica\u00e7\u00e3o Tkinter\")\n\n# Entrada de Texto\nentrada = tk.Entry(root)\nentrada.pack(padx=10, pady=10)\n\n# Bot\u00e3o\nbotao = tk.Button(root, text=\"Mostrar Texto\", command=mostrar_texto)\nbotao.pack(padx=10, pady=10)\n\n# R\u00f3tulo\nlabel = tk.Label(root, text=\"\")\nlabel.pack(padx=10, pady=10)\n\n# Iniciando o mainloop\nroot.mainloop()\n</code></pre> <p>Este script cria uma janela simples com um campo de entrada de texto, um bot\u00e3o e um r\u00f3tulo que exibe o texto inserido.</p>"},{"location":"fundbig/#3-executando-o-script","title":"3. Executando o Script","text":"<p>Para testar a aplica\u00e7\u00e3o, execute o script com o comando:</p> <pre><code>python app.py\n</code></pre>"},{"location":"fundbig/#4-instalacao-do-pyinstaller","title":"4. Instala\u00e7\u00e3o do PyInstaller","text":"<p>Instale o PyInstaller usando o <code>pip</code>:</p> <pre><code>pip install pyinstaller\n</code></pre>"},{"location":"fundbig/#5-criando-o-executavel","title":"5. Criando o Execut\u00e1vel","text":"<p>Para criar um execut\u00e1vel b\u00e1sico, use o comando:</p> <pre><code>pyinstaller app.py\n</code></pre> <p>Este comando cria um diret\u00f3rio <code>dist</code> contendo o execut\u00e1vel e todas as bibliotecas necess\u00e1rias.</p>"},{"location":"fundbig/#6-criando-um-executavel-unico","title":"6. Criando um Execut\u00e1vel \u00danico","text":"<p>Para criar um \u00fanico arquivo execut\u00e1vel, use a op\u00e7\u00e3o <code>--onefile</code>:</p> <pre><code>pyinstaller --onefile app.py\n</code></pre>"},{"location":"fundbig/#7-criando-um-executavel-sem-console-e-com-icone-personalizado","title":"7. Criando um Execut\u00e1vel sem Console e com \u00cdcone Personalizado","text":"<p>Para criar um execut\u00e1vel que n\u00e3o abre uma janela de console e usa um \u00edcone personalizado, voc\u00ea precisa garantir que o arquivo de \u00edcone (<code>icon.ico</code>) esteja no caminho correto. Coloque o arquivo <code>icon.ico</code> no mesmo diret\u00f3rio que o seu script <code>app.py</code>. Em seguida, use as op\u00e7\u00f5es <code>--noconsole</code> e <code>--icon</code>:</p> <pre><code>pyinstaller --onefile --noconsole --icon=icon.ico app.py\n</code></pre>"},{"location":"fundbig/#8-solucao-para-problemas-de-compatibilidade-com-python-312","title":"8. Solu\u00e7\u00e3o para Problemas de Compatibilidade com Python 3.12","text":"<p>Se voc\u00ea encontrar problemas de compatibilidade com a vers\u00e3o do Python, como mostrado na mensagem de erro:</p> <pre><code>The current project's supported Python range (&gt;=3.12,&lt;4.0) is not compatible with some of the required packages Python requirement:\n  - pyinstaller requires Python &lt;3.13,&gt;=3.8, so it will not be satisfied for Python &gt;=3.13,&lt;4.0\n</code></pre> <p>Voc\u00ea pode ajustar a vers\u00e3o do Python utilizada no seu projeto. Uma maneira de fazer isso \u00e9 criar um ambiente virtual com uma vers\u00e3o compat\u00edvel do Python. Certifique-se de que a vers\u00e3o do Python instalada \u00e9 compat\u00edvel com PyInstaller (por exemplo, Python 3.11).</p>"},{"location":"fundbig/#9-criando-um-ambiente-virtual-com-uma-versao-especifica-do-python","title":"9. Criando um Ambiente Virtual com uma Vers\u00e3o Espec\u00edfica do Python","text":"<p>Se voc\u00ea estiver usando <code>pyenv</code> ou <code>virtualenv</code>, pode criar um ambiente virtual com uma vers\u00e3o espec\u00edfica do Python. Exemplo com <code>pyenv</code>:</p> <pre><code>pyenv install 3.11.4\npyenv virtualenv 3.11.4 myenv\npyenv activate myenv\n</code></pre> <p>Ou com <code>virtualenv</code>:</p> <pre><code>virtualenv -p python3.11 myenv\nsource myenv/bin/activate  # No Windows, use `myenv\\Scripts\\activate`\n</code></pre>"},{"location":"fundbig/#10-instalando-dependencias-no-ambiente-virtual","title":"10. Instalando Depend\u00eancias no Ambiente Virtual","text":"<p>Depois de ativar o ambiente virtual, instale as depend\u00eancias necess\u00e1rias:</p> <pre><code>pip install pyinstaller\n</code></pre>"},{"location":"fundbig/#11-criando-o-executavel-no-ambiente-virtual","title":"11. Criando o Execut\u00e1vel no Ambiente Virtual","text":"<p>Agora, crie o execut\u00e1vel usando o PyInstaller no ambiente virtual:</p> <pre><code>pyinstaller --onefile --noconsole --icon=icon.ico app.py\n</code></pre>"},{"location":"fundbig/#conclusao","title":"Conclus\u00e3o","text":"<p>Neste passo a passo, criamos uma aplica\u00e7\u00e3o simples usando Tkinter e a convertimos em um execut\u00e1vel utilizando PyInstaller. Tamb\u00e9m abordamos como resolver problemas de compatibilidade de vers\u00e3o do Python usando ambientes virtuais e como garantir que o arquivo de \u00edcone esteja no caminho correto. Com esses conhecimentos, voc\u00ea pode desenvolver e distribuir suas pr\u00f3prias aplica\u00e7\u00f5es Python com interfaces gr\u00e1ficas de forma eficiente.</p>"},{"location":"fundbig/#referencias","title":"Refer\u00eancias","text":"<ul> <li>Documenta\u00e7\u00e3o do Tkinter</li> <li>Documenta\u00e7\u00e3o do PyInstaller</li> <li>Python Virtual Environments</li> </ul>"},{"location":"fundia/","title":"Fundamentos de IA","text":""},{"location":"fundia/#1-introducao-a-inteligencia-artificial-ia","title":"1. Introdu\u00e7\u00e3o \u00e0 Intelig\u00eancia Artificial (IA)","text":"<p>A Intelig\u00eancia Artificial (IA) \u00e9 um ramo da ci\u00eancia da computa\u00e7\u00e3o que se concentra em criar sistemas capazes de realizar tarefas que, normalmente, exigiriam intelig\u00eancia humana. Essas tarefas incluem reconhecimento de fala, aprendizado, planejamento e resolu\u00e7\u00e3o de problemas.</p> <p>IA pode ser dividida em duas categorias principais:</p> <ul> <li>IA Estreita (Narrow AI): Projetada para executar uma tarefa espec\u00edfica, como reconhecimento de imagem ou processamento de linguagem natural. Exemplo: assistentes virtuais como Siri ou Alexa.</li> <li>IA Geral (General AI): Uma IA que poderia executar qualquer tarefa cognitiva que um ser humano pode. Este n\u00edvel de IA ainda est\u00e1 no campo te\u00f3rico e n\u00e3o foi alcan\u00e7ado.</li> </ul>"},{"location":"fundia/#2-o-que-e-um-perceptron","title":"2. O que \u00e9 um Perceptron","text":"<p>Um perceptron \u00e9 um modelo matem\u00e1tico que tenta simular o comportamento de um neur\u00f4nio biol\u00f3gico. Ele \u00e9 o bloco de constru\u00e7\u00e3o b\u00e1sico das redes neurais artificiais. O perceptron recebe m\u00faltiplas entradas, aplica pesos a elas, soma essas entradas ponderadas e, em seguida, passa o resultado atrav\u00e9s de uma fun\u00e7\u00e3o de ativa\u00e7\u00e3o para produzir uma sa\u00edda.</p> <p>A f\u00f3rmula b\u00e1sica do perceptron \u00e9:</p> <p>[ \\text{Sa\u00edda} = f(w_1 \\cdot x_1 + w_2 \\cdot x_2 + ... + w_n \\cdot x_n + b) ]</p> <p>onde: - ( x_1, x_2, ..., x_n ) s\u00e3o as entradas, - ( w_1, w_2, ..., w_n ) s\u00e3o os pesos associados a cada entrada, - ( b ) \u00e9 o bias, - ( f ) \u00e9 a fun\u00e7\u00e3o de ativa\u00e7\u00e3o (geralmente uma fun\u00e7\u00e3o degrau ou sigmoide).</p>"},{"location":"fundia/#3-implementacao-de-um-perceptron-em-python","title":"3. Implementa\u00e7\u00e3o de um Perceptron em Python","text":"<p>Vamos implementar um perceptron simples que aprende a realizar uma opera\u00e7\u00e3o l\u00f3gica AND. A opera\u00e7\u00e3o AND retorna 1 se ambas as entradas forem 1, caso contr\u00e1rio, retorna 0.</p> <pre><code>import numpy as np\n\n# Fun\u00e7\u00e3o de ativa\u00e7\u00e3o - Degrau\ndef step_function(x):\n    return 1 if x &gt;= 0 else 0\n\n# Classe Perceptron\nclass Perceptron:\n    def __init__(self, input_size, learning_rate=0.1, epochs=1000):\n        self.weights = np.zeros(input_size + 1)  # Pesos inicializados com 0\n        self.learning_rate = learning_rate\n        self.epochs = epochs\n\n    def predict(self, x):\n        # Adiciona o bias (termo de intercepta\u00e7\u00e3o)\n        x = np.insert(x, 0, 1)\n        # Calcula a soma ponderada e aplica a fun\u00e7\u00e3o de ativa\u00e7\u00e3o\n        weighted_sum = np.dot(self.weights, x)\n        return step_function(weighted_sum)\n\n    def fit(self, X, y):\n        # Treinamento do perceptron\n        for _ in range(self.epochs):\n            for i in range(y.size):\n                prediction = self.predict(X[i])\n                # Calcula o erro\n                error = y[i] - prediction\n                # Atualiza os pesos\n                self.weights[1:] += self.learning_rate * error * X[i]\n                self.weights[0] += self.learning_rate * error\n\n# Dados de treinamento para a opera\u00e7\u00e3o AND\nX = np.array([\n    [0, 0],\n    [0, 1],\n    [1, 0],\n    [1, 1]\n])\n\n# Labels correspondentes\ny = np.array([0, 0, 0, 1])\n\n# Cria o perceptron\nperceptron = Perceptron(input_size=2)\n\n# Treina o perceptron\nperceptron.fit(X, y)\n\n# Testa o perceptron\nprint(\"Pesos finais:\", perceptron.weights)\nprint(\"Predi\u00e7\u00e3o para [0, 0]:\", perceptron.predict([0, 0]))\nprint(\"Predi\u00e7\u00e3o para [0, 1]:\", perceptron.predict([0, 1]))\nprint(\"Predi\u00e7\u00e3o para [1, 0]:\", perceptron.predict([1, 0]))\nprint(\"Predi\u00e7\u00e3o para [1, 1]:\", perceptron.predict([1, 1]))\n</code></pre>"},{"location":"fundia/#explicacao-do-codigo","title":"Explica\u00e7\u00e3o do C\u00f3digo","text":"<ul> <li>Fun\u00e7\u00e3o de Ativa\u00e7\u00e3o: Utilizamos uma fun\u00e7\u00e3o degrau simples que retorna 1 se a entrada \u00e9 maior ou igual a 0, caso contr\u00e1rio retorna 0.</li> <li>Classe Perceptron: Esta classe define o perceptron. O m\u00e9todo <code>__init__</code> inicializa os pesos, a taxa de aprendizado, e o n\u00famero de \u00e9pocas. O m\u00e9todo <code>predict</code> calcula a sa\u00edda do perceptron, e o m\u00e9todo <code>fit</code> ajusta os pesos durante o treinamento.</li> <li>Treinamento: O perceptron \u00e9 treinado utilizando o algoritmo de aprendizado supervisionado, onde os pesos s\u00e3o atualizados de acordo com o erro (diferen\u00e7a entre a previs\u00e3o e o valor real).</li> </ul>"},{"location":"fundia/#testando-o-perceptron","title":"Testando o Perceptron","text":"<p>Ap\u00f3s o treinamento, o perceptron deve ser capaz de prever corretamente o resultado da opera\u00e7\u00e3o AND:</p> <pre><code>Pesos finais: [bias, peso1, peso2]\nPredi\u00e7\u00e3o para [0, 0]: 0\nPredi\u00e7\u00e3o para [0, 1]: 0\nPredi\u00e7\u00e3o para [1, 0]: 0\nPredi\u00e7\u00e3o para [1, 1]: 1\n</code></pre> <p>Vamos avan\u00e7ar um pouco mais e utilizar um dataset mais complexo para demonstrar o uso de um perceptron na classifica\u00e7\u00e3o de vinhos. Usaremos o dataset de vinhos dispon\u00edvel na biblioteca <code>scikit-learn</code>, que cont\u00e9m caracter\u00edsticas qu\u00edmicas de diferentes tipos de vinho e os classifica em tr\u00eas categorias.</p>"},{"location":"fundia/#agora-vamos-fazer-uma-implementacao-com-o-wine","title":"Agora vamos fazer uma implementa\u00e7\u00e3o com o WINE","text":"<ol> <li>Importar as Bibliotecas Necess\u00e1rias: Vamos usar o <code>scikit-learn</code> para carregar o dataset e realizar a separa\u00e7\u00e3o dos dados.</li> <li>Pr\u00e9-processamento dos Dados: Normalizar os dados para melhorar o desempenho do perceptron.</li> <li>Implementar o Perceptron com <code>scikit-learn</code>: Utilizar a classe <code>Perceptron</code> do <code>scikit-learn</code>.</li> <li>Treinar o Modelo: Usar uma parte dos dados para treinar o modelo.</li> <li>Avaliar o Modelo: Testar o modelo com os dados de teste e avaliar sua acur\u00e1cia.</li> </ol>"},{"location":"fundia/#1-importar-as-bibliotecas-necessarias","title":"1. Importar as Bibliotecas Necess\u00e1rias","text":"<p>Vamos come\u00e7ar importando as bibliotecas:</p> <pre><code>import numpy as np\nfrom sklearn.datasets import load_wine\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.metrics import accuracy_score, classification_report\n</code></pre>"},{"location":"fundia/#2-carregar-e-pre-processar-o-dataset","title":"2. Carregar e Pr\u00e9-processar o Dataset","text":"<p>Carregar o dataset de vinhos e dividir em conjuntos de treinamento e teste:</p> <pre><code># Carregar o dataset de vinhos\ndata = load_wine()\nX = data.data\ny = data.target\n\n# Dividir o dataset em conjuntos de treinamento e teste\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n# Normalizar os dados\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\n</code></pre>"},{"location":"fundia/#3-implementar-o-perceptron-com-scikit-learn","title":"3. Implementar o Perceptron com <code>scikit-learn</code>","text":"<p>Agora vamos utilizar a implementa\u00e7\u00e3o de perceptron da biblioteca <code>scikit-learn</code>:</p> <pre><code># Criar o modelo Perceptron\nmodel = Perceptron(max_iter=1000, eta0=0.1, random_state=42)\n\n# Treinar o modelo\nmodel.fit(X_train, y_train)\n</code></pre>"},{"location":"fundia/#4-treinar-o-modelo","title":"4. Treinar o Modelo","text":"<p>O treinamento \u00e9 feito utilizando o m\u00e9todo <code>.fit()</code> que ajusta o modelo aos dados de treinamento.</p> <pre><code># Prever nos dados de teste\ny_pred = model.predict(X_test)\n</code></pre>"},{"location":"fundia/#5-avaliar-o-modelo","title":"5. Avaliar o Modelo","text":"<p>Podemos calcular a acur\u00e1cia do modelo e imprimir um relat\u00f3rio de classifica\u00e7\u00e3o:</p> <pre><code># Avaliar o modelo\naccuracy = accuracy_score(y_test, y_pred)\nprint(f\"Acur\u00e1cia do modelo: {accuracy:.2f}\")\n\n# Relat\u00f3rio de classifica\u00e7\u00e3o\nprint(\"Relat\u00f3rio de Classifica\u00e7\u00e3o:\\n\", classification_report(y_test, y_pred, target_names=data.target_names))\n</code></pre>"},{"location":"fundia/#explicacao-do-codigo_1","title":"Explica\u00e7\u00e3o do C\u00f3digo","text":"<ul> <li>Dataset de Vinho: O dataset cont\u00e9m 13 caracter\u00edsticas qu\u00edmicas de diferentes vinhos, classificados em tr\u00eas categorias (classes).</li> <li>Pr\u00e9-processamento: Normalizamos os dados utilizando <code>StandardScaler</code> para que todas as caracter\u00edsticas tenham a mesma escala, o que \u00e9 importante para o treinamento do perceptron.</li> <li>Perceptron: Utilizamos o perceptron do <code>scikit-learn</code>, que \u00e9 uma implementa\u00e7\u00e3o otimizada e eficiente do perceptron.</li> <li>Acur\u00e1cia: Calculamos a acur\u00e1cia para medir a porcentagem de previs\u00f5es corretas feitas pelo modelo.</li> </ul>"},{"location":"fundia/#resultados-esperados","title":"Resultados Esperados","text":"<p>O perceptron deve ser capaz de classificar o vinho em uma das tr\u00eas categorias com uma acur\u00e1cia razo\u00e1vel. O resultado pode variar dependendo da aleatoriedade no <code>train_test_split</code> e da inicializa\u00e7\u00e3o dos pesos no perceptron.</p> <p>Exemplo de sa\u00edda esperada:</p> <pre><code>Acur\u00e1cia do modelo: 0.96\nRelat\u00f3rio de Classifica\u00e7\u00e3o:\n               precision    recall  f1-score   support\n\n    class_0       0.97      1.00      0.99        16\n    class_1       0.97      0.88      0.92        25\n    class_2       0.94      1.00      0.97        13\n\naccuracy                           0.96        54\nmacro avg       0.96      0.96      0.96        54\nweighted avg    0.96      0.96      0.96        54\n</code></pre>"},{"location":"fundia/#conclusao","title":"Conclus\u00e3o","text":"<p>Usando o perceptron, conseguimos realizar a classifica\u00e7\u00e3o de vinhos com uma boa acur\u00e1cia. Embora o perceptron seja um modelo simples, ele pode ser utilizado para resolver problemas de classifica\u00e7\u00e3o linearmente separ\u00e1veis. Para problemas mais complexos, redes neurais mais profundas e algoritmos mais sofisticados, como o <code>Multi-layer Perceptron</code> (MLP), s\u00e3o mais apropriados.</p>"},{"location":"probig/","title":"Aula de Projeto Pr\u00e1tico de BigData","text":""},{"location":"probig/#antes-de-tudo","title":"Antes de Tudo","text":"<ol> <li>Vamos criar o github do seu projeto individual. Entre no seu github (ou crie se n\u00e3o tiver) e crie um reposit\u00f3rio novo com o nome de: <code>{nome}{sobrenome}bigdatafecaf</code>;</li> <li>Conecte-se com o seu github via replit;</li> </ol>"},{"location":"probig/#vamos-iniciar-a-aula","title":"Vamos Iniciar a Aula","text":"<ol> <li>Baixe o dataset daqui: link;</li> <li>Fa\u00e7a o upload para o replit;</li> <li>Rode o seguinte comando no shell:</li> </ol> <pre><code>poetry add streamlit pandas sqlalchemy psycopg2-binary plotly python-dotenv\n</code></pre> <ol> <li>Crie um <code>.env</code>:</li> </ol> <pre><code>DATABASE_URL=xxxxxx\n</code></pre> <ol> <li>Desenvolva o script em <code>main.py</code>:</li> </ol> <pre><code>import streamlit as st\nimport pandas as pd\nfrom sqlalchemy import create_engine\nimport plotly.express as px\n\n\n# Fun\u00e7\u00e3o para criar conex\u00e3o com o banco de dados\ndef get_db_connection():\n    return create_engine(\"string de conex\u00e3o\")\n\n\n# Fun\u00e7\u00e3o para criar tabela no PostgreSQL\ndef create_table(engine, df):\n    df.to_sql('temperature_logs', engine, if_exists='replace', index=False)\n\n\n# Upload do arquivo CSV\nst.title(\"Upload de Arquivo CSV\")\nuploaded_file = st.file_uploader(\"Escolha um arquivo CSV\", type=\"csv\")\n\nif uploaded_file is not None:\n    # Leitura do arquivo CSV\n    df = pd.read_csv(uploaded_file)\n    st.write(\"Estrutura do Dataset:\")\n    st.write(df.head())\n\n    # Conectar ao banco de dados\n    engine = get_db_connection()\n\n    # Criar tabela no PostgreSQL\n    create_table(engine, df)\n    st.success(\"Dados enviados para o banco de dados.\")\n\n    # Ler dados do banco de dados\n    query = \"SELECT * FROM temperature_logs\"\n    data = pd.read_sql(query, engine)\n\n    # Visualiza\u00e7\u00e3o dos dados com Plotly\n    st.title(\"Visualiza\u00e7\u00e3o dos Dados\")\n    fig = px.line(data,\n                  x='noted_date',\n                  y='temp',\n                  title='S\u00e9rie Temporal de Temperaturas')\n    st.plotly_chart(fig)\n</code></pre> <ol> <li> <p>Execute o Streamlit e veja o gr\u00e1fico.</p> </li> <li> <p>Fa\u00e7a git push e depois o deploy em render.com.</p> </li> </ol>"},{"location":"probig/#vamos-para-o-recreio","title":"Vamos para o Recreio!","text":""},{"location":"probig/#agora-e-a-sua-vez-inicie-o-projeto-e-mande-a-url-para-o-formulario-link","title":"Agora \u00e9 a sua vez, inicie o projeto, e mande a url para o formul\u00e1rio link","text":""},{"location":"spark/","title":"Processamento de Dados com Apache Spark","text":""},{"location":"spark/#introducao-ao-apache-spark","title":"Introdu\u00e7\u00e3o ao Apache Spark","text":"<p>O Apache Spark \u00e9 um mecanismo de processamento de dados de c\u00f3digo aberto projetado para lidar com grandes volumes de dados de forma r\u00e1pida e eficiente. Ele foi desenvolvido para superar as limita\u00e7\u00f5es do MapReduce, um modelo de programa\u00e7\u00e3o utilizado no Hadoop, proporcionando maior desempenho ao realizar c\u00e1lculos na mem\u00f3ria em vez de no disco[1][3].</p>"},{"location":"spark/#componentes-principais-do-spark","title":"Componentes Principais do Spark","text":"<ol> <li> <p>Spark Core: \u00c9 o n\u00facleo do Spark, respons\u00e1vel pelo processamento de dados paralelo. Ele lida com agendamento, otimiza\u00e7\u00e3o, e abstra\u00e7\u00e3o de dados atrav\u00e9s de RDDs (Resilient Distributed Datasets), que s\u00e3o cole\u00e7\u00f5es imut\u00e1veis e distribu\u00eddas de objetos process\u00e1veis em paralelo[1][3].</p> </li> <li> <p>Spark SQL: Permite consultas em dados estruturados usando DataFrames, que s\u00e3o uma abstra\u00e7\u00e3o sobre RDDs. Ele suporta integra\u00e7\u00e3o com armazenamentos de dados SQL, como Apache Hive[1].</p> </li> <li> <p>Spark Streaming: Oferece processamento de dados em tempo real, ingerindo dados em minilotes e permitindo an\u00e1lises de streaming[2].</p> </li> <li> <p>MLlib: Biblioteca de aprendizado de m\u00e1quina que fornece algoritmos otimizados para processamento em larga escala[1].</p> </li> <li> <p>GraphX: Framework para processamento de gr\u00e1ficos, permitindo ETL, an\u00e1lise explorat\u00f3ria e computa\u00e7\u00e3o gr\u00e1fica iterativa[2].</p> </li> </ol>"},{"location":"spark/#como-funciona","title":"Como Funciona","text":""},{"location":"spark/#vantagens-do-apache-spark","title":"Vantagens do Apache Spark","text":"<ul> <li>Processamento em Mem\u00f3ria: O Spark realiza c\u00e1lculos na mem\u00f3ria, o que reduz a lat\u00eancia e aumenta a velocidade do processamento em compara\u00e7\u00e3o com sistemas baseados em disco[1][3].</li> <li>Suporte a M\u00faltiplas Linguagens: Oferece APIs em Java, Scala, Python e R, tornando-o acess\u00edvel para diferentes perfis de desenvolvedores[5].</li> <li>Escalabilidade: Capaz de processar grandes volumes de dados distribu\u00eddos entre muitos computadores[5].</li> </ul>"},{"location":"spark/#introducao-ao-pyspark","title":"Introdu\u00e7\u00e3o ao PySpark","text":"<p>PySpark \u00e9 a interface do Apache Spark para a linguagem de programa\u00e7\u00e3o Python. Ele permite que desenvolvedores usem o poder do Spark com a simplicidade e a popularidade do Python. PySpark \u00e9 amplamente utilizado para tarefas de processamento de dados, aprendizado de m\u00e1quina e an\u00e1lise de dados em larga escala.</p>"},{"location":"spark/#funcionalidades-do-pyspark","title":"Funcionalidades do PySpark","text":"<ul> <li>DataFrames e SQL: Assim como no Spark SQL, PySpark suporta opera\u00e7\u00f5es em DataFrames, permitindo consultas SQL diretamente em dados estruturados.</li> <li>Machine Learning com MLlib: PySpark oferece suporte \u00e0 biblioteca MLlib, permitindo a implementa\u00e7\u00e3o de algoritmos de aprendizado de m\u00e1quina em grandes conjuntos de dados.</li> <li>Streaming e Gr\u00e1ficos: Com PySpark, \u00e9 poss\u00edvel realizar processamento de dados em tempo real e trabalhar com gr\u00e1ficos usando as bibliotecas Spark Streaming e GraphX.</li> </ul> <p>Citations: [1] https://www.ibm.com/br-pt/topics/apache-spark [2] https://aws.amazon.com/pt/what-is/apache-spark/ [3] https://www.activebi.com.br/post/apache-spark-ferramenta-poderosa-para-processamento-de-dados-em-big-data/71 [4] https://www.cnj.jus.br/formacao-e-capacitacao/curso-de-ciencia-de-dados-aplicada-ao-poder-judiciario/spark-distribuicao-e-processamento-de-dados/ [5] https://blog.dsacademy.com.br/vantagens-e-desvantagens-do-apache-spark/</p>"},{"location":"spark/#pratica-vamos-rodar-um-spark","title":"Pr\u00e1tica - Vamos Rodar um Spark","text":"<ol> <li>Crie uma estrutura assim:</li> </ol> <pre><code>/csv\n/parquet\n/work\n  \u2514\u2500\u2500 notebook.ipynb\nDockerfile\ndocker-compose.yml\n</code></pre> <ol> <li>Crie um <code>docker-compose.yml</code></li> </ol> <pre><code>version: '3.8'\n\nservices:\n  jupyter:\n    build: .\n    ports:\n      - \"8888:8888\"   # Porta para o Jupyter Notebook\n      - \"4040:4040\"   # Porta para o Spark UI\n    volumes:\n      - ./csv:/home/jovyan/work/csv\n      - ./parquet:/home/jovyan/work/parquet\n      - ./work:/home/jovyan/work\n</code></pre> <ol> <li>Crie um <code>Dockerfile</code></li> </ol> <pre><code>FROM jupyter/pyspark-notebook:spark-3.3.0\n\n# Define o diret\u00f3rio de trabalho\nWORKDIR /home/jovyan/work\n</code></pre> <ol> <li>Inicialize o docker:</li> </ol> <pre><code>docker-compose up\n</code></pre> <ul> <li> <p>N\u00e3o se esque\u00e7a de pegar o token para entrar no <code>localhost:8888</code></p> </li> <li> <p>Copie o seguinte c\u00f3digo:</p> </li> </ul> <pre><code>from pyspark.sql import SparkSession\nimport time\n\n# Cria\u00e7\u00e3o da SparkSession\nspark = SparkSession.builder \\\n    .appName(\"CSV to Parquet\") \\\n    .getOrCreate()\n\n# Caminhos dos arquivos\ncsv_path = \"csv/inventory_dataset.csv\"\nparquet_path = \"parquet/inventory_dataset.parquet\"\n\n# In\u00edcio do tempo de leitura\nstart_time = time.time()\n\n# Leitura do arquivo CSV\ndf = spark.read.csv(csv_path, header=True, inferSchema=True)\n\n# Fim do tempo de leitura\nread_time = time.time() - start_time\nprint(f\"Tempo de leitura do CSV: {read_time} segundos\")\n\n# In\u00edcio do tempo de escrita\nstart_time = time.time()\n\n# Escrita do DataFrame em formato Parquet\ndf.write.parquet(parquet_path)\n\n# Fim do tempo de escrita\nwrite_time = time.time() - start_time\nprint(f\"Tempo de escrita em Parquet: {write_time} segundos\")\n\n# Parar a SparkSession\nspark.stop()\n</code></pre> <ol> <li>Tem que ter o arquivo de 3.7gb <code>inventory_dataset.csv</code> na pasta <code>csv</code>.</li> <li>Verificar o arquivo <code>parquet</code>.</li> </ol>"},{"location":"spark/#agora-teste-sem-o-spark","title":"Agora teste sem o spark","text":"<pre><code>import pandas as pd\nimport time\n\n# Caminhos dos arquivos\ncsv_path = \"csv/inventory_dataset.csv\"\nparquet_path = \"parquet/inventory_dataset_pandas.parquet\"\n\n# In\u00edcio do tempo de leitura\nstart_time = time.time()\n\n# Leitura do arquivo CSV usando Pandas\ndf = pd.read_csv(csv_path)\n\n# Fim do tempo de leitura\nread_time = time.time() - start_time\nprint(f\"Tempo de leitura do CSV com Pandas: {read_time} segundos\")\n\n# In\u00edcio do tempo de escrita\nstart_time = time.time()\n\n# Escrita do DataFrame em formato Parquet usando Pandas\ndf.to_parquet(parquet_path, engine='pyarrow')\n\n# Fim do tempo de escrita\nwrite_time = time.time() - start_time\nprint(f\"Tempo de escrita em Parquet com Pandas: {write_time} segundos\")\n</code></pre>"},{"location":"spark/#pratica","title":"Pr\u00e1tica","text":"<p>Entre no Kaggle, crie uma conta (pode ser com o seu e-mail google) e escolha um dataset em .csv. Inicie o spark ou jupyter e transforme este csv para parquet.</p>"}]}